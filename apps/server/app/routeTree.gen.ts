/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AppTestingImport } from './routes/app/testing'
import { Route as AppSettingsImport } from './routes/app/settings'
import { Route as AppCreateImport } from './routes/app/create'
import { Route as AppTrackablesIndexImport } from './routes/app/trackables/index'
import { Route as AppTrackablesIdImport } from './routes/app/trackables/$id'
import { Route as AppTrackablesIdIndexImport } from './routes/app/trackables/$id/index'
import { Route as AppTrackablesIdViewImport } from './routes/app/trackables/$id/view'
import { Route as AppTrackablesIdSettingsImport } from './routes/app/trackables/$id/settings'
import { Route as AppTrackablesIdImportImport } from './routes/app/trackables/$id/import'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppTestingRoute = AppTestingImport.update({
  id: '/testing',
  path: '/testing',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppCreateRoute = AppCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AppRoute,
} as any)

const AppTrackablesIndexRoute = AppTrackablesIndexImport.update({
  id: '/trackables/',
  path: '/trackables/',
  getParentRoute: () => AppRoute,
} as any)

const AppTrackablesIdRoute = AppTrackablesIdImport.update({
  id: '/trackables/$id',
  path: '/trackables/$id',
  getParentRoute: () => AppRoute,
} as any)

const AppTrackablesIdIndexRoute = AppTrackablesIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppTrackablesIdRoute,
} as any)

const AppTrackablesIdViewRoute = AppTrackablesIdViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => AppTrackablesIdRoute,
} as any)

const AppTrackablesIdSettingsRoute = AppTrackablesIdSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppTrackablesIdRoute,
} as any)

const AppTrackablesIdImportRoute = AppTrackablesIdImportImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => AppTrackablesIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/app/create': {
      id: '/app/create'
      path: '/create'
      fullPath: '/app/create'
      preLoaderRoute: typeof AppCreateImport
      parentRoute: typeof AppImport
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/app/testing': {
      id: '/app/testing'
      path: '/testing'
      fullPath: '/app/testing'
      preLoaderRoute: typeof AppTestingImport
      parentRoute: typeof AppImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/app/trackables/$id': {
      id: '/app/trackables/$id'
      path: '/trackables/$id'
      fullPath: '/app/trackables/$id'
      preLoaderRoute: typeof AppTrackablesIdImport
      parentRoute: typeof AppImport
    }
    '/app/trackables/': {
      id: '/app/trackables/'
      path: '/trackables'
      fullPath: '/app/trackables'
      preLoaderRoute: typeof AppTrackablesIndexImport
      parentRoute: typeof AppImport
    }
    '/app/trackables/$id/import': {
      id: '/app/trackables/$id/import'
      path: '/import'
      fullPath: '/app/trackables/$id/import'
      preLoaderRoute: typeof AppTrackablesIdImportImport
      parentRoute: typeof AppTrackablesIdImport
    }
    '/app/trackables/$id/settings': {
      id: '/app/trackables/$id/settings'
      path: '/settings'
      fullPath: '/app/trackables/$id/settings'
      preLoaderRoute: typeof AppTrackablesIdSettingsImport
      parentRoute: typeof AppTrackablesIdImport
    }
    '/app/trackables/$id/view': {
      id: '/app/trackables/$id/view'
      path: '/view'
      fullPath: '/app/trackables/$id/view'
      preLoaderRoute: typeof AppTrackablesIdViewImport
      parentRoute: typeof AppTrackablesIdImport
    }
    '/app/trackables/$id/': {
      id: '/app/trackables/$id/'
      path: '/'
      fullPath: '/app/trackables/$id/'
      preLoaderRoute: typeof AppTrackablesIdIndexImport
      parentRoute: typeof AppTrackablesIdImport
    }
  }
}

// Create and export the route tree

interface AppTrackablesIdRouteChildren {
  AppTrackablesIdImportRoute: typeof AppTrackablesIdImportRoute
  AppTrackablesIdSettingsRoute: typeof AppTrackablesIdSettingsRoute
  AppTrackablesIdViewRoute: typeof AppTrackablesIdViewRoute
  AppTrackablesIdIndexRoute: typeof AppTrackablesIdIndexRoute
}

const AppTrackablesIdRouteChildren: AppTrackablesIdRouteChildren = {
  AppTrackablesIdImportRoute: AppTrackablesIdImportRoute,
  AppTrackablesIdSettingsRoute: AppTrackablesIdSettingsRoute,
  AppTrackablesIdViewRoute: AppTrackablesIdViewRoute,
  AppTrackablesIdIndexRoute: AppTrackablesIdIndexRoute,
}

const AppTrackablesIdRouteWithChildren = AppTrackablesIdRoute._addFileChildren(
  AppTrackablesIdRouteChildren,
)

interface AppRouteChildren {
  AppCreateRoute: typeof AppCreateRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppTestingRoute: typeof AppTestingRoute
  AppIndexRoute: typeof AppIndexRoute
  AppTrackablesIdRoute: typeof AppTrackablesIdRouteWithChildren
  AppTrackablesIndexRoute: typeof AppTrackablesIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppCreateRoute: AppCreateRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppTestingRoute: AppTestingRoute,
  AppIndexRoute: AppIndexRoute,
  AppTrackablesIdRoute: AppTrackablesIdRouteWithChildren,
  AppTrackablesIndexRoute: AppTrackablesIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/app/create': typeof AppCreateRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/testing': typeof AppTestingRoute
  '/app/': typeof AppIndexRoute
  '/app/trackables/$id': typeof AppTrackablesIdRouteWithChildren
  '/app/trackables': typeof AppTrackablesIndexRoute
  '/app/trackables/$id/import': typeof AppTrackablesIdImportRoute
  '/app/trackables/$id/settings': typeof AppTrackablesIdSettingsRoute
  '/app/trackables/$id/view': typeof AppTrackablesIdViewRoute
  '/app/trackables/$id/': typeof AppTrackablesIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/app/create': typeof AppCreateRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/testing': typeof AppTestingRoute
  '/app': typeof AppIndexRoute
  '/app/trackables': typeof AppTrackablesIndexRoute
  '/app/trackables/$id/import': typeof AppTrackablesIdImportRoute
  '/app/trackables/$id/settings': typeof AppTrackablesIdSettingsRoute
  '/app/trackables/$id/view': typeof AppTrackablesIdViewRoute
  '/app/trackables/$id': typeof AppTrackablesIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/app/create': typeof AppCreateRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/testing': typeof AppTestingRoute
  '/app/': typeof AppIndexRoute
  '/app/trackables/$id': typeof AppTrackablesIdRouteWithChildren
  '/app/trackables/': typeof AppTrackablesIndexRoute
  '/app/trackables/$id/import': typeof AppTrackablesIdImportRoute
  '/app/trackables/$id/settings': typeof AppTrackablesIdSettingsRoute
  '/app/trackables/$id/view': typeof AppTrackablesIdViewRoute
  '/app/trackables/$id/': typeof AppTrackablesIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/login'
    | '/app/create'
    | '/app/settings'
    | '/app/testing'
    | '/app/'
    | '/app/trackables/$id'
    | '/app/trackables'
    | '/app/trackables/$id/import'
    | '/app/trackables/$id/settings'
    | '/app/trackables/$id/view'
    | '/app/trackables/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/app/create'
    | '/app/settings'
    | '/app/testing'
    | '/app'
    | '/app/trackables'
    | '/app/trackables/$id/import'
    | '/app/trackables/$id/settings'
    | '/app/trackables/$id/view'
    | '/app/trackables/$id'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/login'
    | '/app/create'
    | '/app/settings'
    | '/app/testing'
    | '/app/'
    | '/app/trackables/$id'
    | '/app/trackables/'
    | '/app/trackables/$id/import'
    | '/app/trackables/$id/settings'
    | '/app/trackables/$id/view'
    | '/app/trackables/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/create",
        "/app/settings",
        "/app/testing",
        "/app/",
        "/app/trackables/$id",
        "/app/trackables/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/app/create": {
      "filePath": "app/create.tsx",
      "parent": "/app"
    },
    "/app/settings": {
      "filePath": "app/settings.tsx",
      "parent": "/app"
    },
    "/app/testing": {
      "filePath": "app/testing.tsx",
      "parent": "/app"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/trackables/$id": {
      "filePath": "app/trackables/$id.tsx",
      "parent": "/app",
      "children": [
        "/app/trackables/$id/import",
        "/app/trackables/$id/settings",
        "/app/trackables/$id/view",
        "/app/trackables/$id/"
      ]
    },
    "/app/trackables/": {
      "filePath": "app/trackables/index.tsx",
      "parent": "/app"
    },
    "/app/trackables/$id/import": {
      "filePath": "app/trackables/$id/import.tsx",
      "parent": "/app/trackables/$id"
    },
    "/app/trackables/$id/settings": {
      "filePath": "app/trackables/$id/settings.tsx",
      "parent": "/app/trackables/$id"
    },
    "/app/trackables/$id/view": {
      "filePath": "app/trackables/$id/view.tsx",
      "parent": "/app/trackables/$id"
    },
    "/app/trackables/$id/": {
      "filePath": "app/trackables/$id/index.tsx",
      "parent": "/app/trackables/$id"
    }
  }
}
ROUTE_MANIFEST_END */
