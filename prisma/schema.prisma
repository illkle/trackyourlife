

generator client {
    provider = "prisma-client-js"
    previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

//
// Authorization stuff
//
model User {
    id           String    @id @unique
    auth_session Session[]
    key          Key[]
    email String @unique
    username String

    trackables    Trackable[]
    settings Json @default("{}")
}

model Session {
    id             String @id @unique
    user_id        String
    active_expires BigInt
    idle_expires   BigInt
    user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
}

model Key {
    id              String  @id @unique
    hashed_password String?
    user_id         String
    user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
}

//
// Content stuff
//

enum TrackableType {
    boolean
    number
    range
}

model Trackable {
    id String @id @default(uuid())
    userId String
    user User @relation(fields: [userId], references: [id])
    type TrackableType
    data TrackableRecord[]    
    settings Json @default("{}")
}

model TrackableRecord {
    id String @id @default(uuid())
    trackableId String
    trackable Trackable @relation(fields: [trackableId], references: [id])
    date DateTime @db.Date
    value String
    
    @@unique([trackableId, date], map: "TrackableRecord_trackableId_date_unique_constraint")
}