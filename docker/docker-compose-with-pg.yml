services:
  node:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    environment:
      - VITE_ZERO_DOMAIN=zero:4848
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=http://localhost:3000
      - MIGRATE=true
    ports:
      - "8000:8000"
      - "3000:3000"
    depends_on:
      - zero
  zero:
    build:
      context: ..
      dockerfile: ./docker/zero.Dockerfile
    ports:
      - "4848:4848"
    environment:
      - ZERO_UPSTREAM_DB=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - ZERO_CVR_DB=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - ZERO_CHANGE_DB=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - ZERO_AUTH_JWKS_URL=http://node:3000/api/auth/jwks
      - ZERO_REPLICA_FILE=./zstart_replica.db
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=-c wal_level=logical
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 60s
      retries: 20
      start_period: 5s
volumes:
  pgdata:
